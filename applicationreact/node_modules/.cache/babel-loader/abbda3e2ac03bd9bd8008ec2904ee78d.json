{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JGDda\\\\WebstormProjects\\\\bapClausiusInvestments\\\\src\\\\views\\\\components\\\\questions\\\\questions.js\";\nimport React, { Component } from 'react';\nimport Cards from \"./cards/cards\";\nimport './questions.css';\nimport CTA from \"../global/button/CTA\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: ''\n    };\n  }\n\n  render() {\n    this.answers = [];\n    this.answersA = 0;\n    this.answersB = 0;\n    this.answersC = 0;\n    this.answersD = 0;\n\n    this.handleClick = event => {\n      let value = event.target.value;\n      this.answers.push(value);\n    };\n\n    function answerA(element) {\n      return element >= \"A\";\n    }\n\n    function answerB(element) {\n      return element >= \"B\";\n    }\n\n    function answerC(element) {\n      return element >= \"B\";\n    }\n\n    function answerD(element) {\n      return element >= \"B\";\n    }\n\n    this.submitQuestions = event => {\n      event.preventDefault();\n      let lengthBox = document.getElementsByClassName('boxQuestion').length;\n\n      if (this.answers.length === lengthBox) {\n        this.count = this.answers.filter(answerA);\n        this.answersA = count;\n        this.count = this.answers.filter(answerB);\n        this.answersB = count;\n        this.count = this.answers.filter(answerC);\n        this.answersC = count;\n        this.count = this.answers.filter(answerD);\n        this.answersD = count;\n        console.log(this.answersA);\n        console.log(this.answersB);\n        console.log(this.answersC);\n        console.log(this.answersD);\n      } else if (this.answers.length > lengthBox) {\n        alert(\"Probleme avec vos réponses, la page va rechargé.\");\n        document.location.reload(true);\n      } else if (this.answers.length < lengthBox) {\n        alert(\"Toutes les réponses n'ont pas été enrégistré !\");\n      }\n    };\n\n    let questions = [];\n    window.addEventListener('load', () => {\n      let questionNumber = 2;\n\n      for (let i = 1; i <= questionNumber; i++) {\n        questions.push(React.createElement(Cards, {\n          id: i.toString(),\n          title: \"Question \" + i + \":\",\n          label: \"answer\" + i.toString(),\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        questions: questions\n      });\n    });\n    return React.createElement(\"section\", {\n      className: \"questionnaire\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitQuestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.questions, React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Etape suivante\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Etape suivante\")));\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["C:/Users/JGDda/WebstormProjects/bapClausiusInvestments/src/views/components/questions/questions.js"],"names":["React","Component","Cards","CTA","Questions","constructor","props","state","questions","render","answers","answersA","answersB","answersC","answersD","handleClick","event","value","target","push","answerA","element","answerB","answerC","answerD","submitQuestions","preventDefault","lengthBox","document","getElementsByClassName","length","count","filter","console","log","alert","location","reload","window","addEventListener","questionNumber","i","toString","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport Cards from \"./cards/cards\";\r\nimport './questions.css';\r\n\r\nimport CTA from \"../global/button/CTA\";\r\n\r\n\r\nclass Questions extends Component {\r\n    submitQuestions;\r\n    handleClick;\r\n    answers;\r\n    answersA;\r\n    answersB;\r\n    answersC;\r\n    answersD;\r\n    count;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questions: '',\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        this.answers = [];\r\n        this.answersA = 0;\r\n        this.answersB = 0;\r\n        this.answersC = 0;\r\n        this.answersD = 0;\r\n\r\n        this.handleClick = (event) => {\r\n            let value = event.target.value;\r\n            this.answers.push(value);\r\n        };\r\n\r\n        function answerA(element) {\r\n            return element >= \"A\";\r\n        }\r\n\r\n        function answerB(element) {\r\n            return element >= \"B\";\r\n        }\r\n\r\n        function answerC(element) {\r\n            return element >= \"B\";\r\n        }\r\n\r\n        function answerD(element) {\r\n            return element >= \"B\";\r\n        }\r\n\r\n        this.submitQuestions = (event) => {\r\n            event.preventDefault();\r\n            let lengthBox = document.getElementsByClassName('boxQuestion').length;\r\n            if (this.answers.length === lengthBox) {\r\n                this.count = this.answers.filter(answerA);\r\n                this.answersA = count;\r\n                this.count = this.answers.filter(answerB);\r\n                this.answersB = count;\r\n                this.count = this.answers.filter(answerC);\r\n                this.answersC = count;\r\n                this.count = this.answers.filter(answerD);\r\n                this.answersD = count;\r\n\r\n                console.log(this.answersA);\r\n                console.log(this.answersB);\r\n                console.log(this.answersC);\r\n                console.log(this.answersD);\r\n\r\n\r\n\r\n            } else if (this.answers.length > lengthBox) {\r\n                alert(\"Probleme avec vos réponses, la page va rechargé.\");\r\n                document.location.reload(true);\r\n            } else if (this.answers.length < lengthBox) {\r\n                alert(\"Toutes les réponses n'ont pas été enrégistré !\")\r\n            }\r\n\r\n        };\r\n\r\n        let questions = [];\r\n\r\n        window.addEventListener('load', () => {\r\n            let questionNumber = 2;\r\n\r\n            for (let i = 1; i <= questionNumber; i++) {\r\n                questions.push(<Cards\r\n                    id={i.toString()}\r\n                    title={\"Question \" + i + \":\"}\r\n                    label={\"answer\" + i.toString()}\r\n                    onClick={this.handleClick}\r\n                />);\r\n            }\r\n\r\n            this.setState({\r\n                questions: questions\r\n            });\r\n        });\r\n\r\n        return (\r\n            <section className=\"questionnaire\">\r\n                <form onSubmit={this.submitQuestions}>\r\n                    {this.state.questions}\r\n                    <button type=\"submit\" value=\"Etape suivante\">Etape suivante</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n"]},"metadata":{},"sourceType":"module"}